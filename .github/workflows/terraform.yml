name: Terraform Deploy via WIF

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  TRANSLATE_FUNCTION_ARCHIVE: "cloud_function_translate_source_${{ github.sha }}.zip"
  CODE_BUCKET: ttts-code
  CODE_BUCKET_REGION: "us-central1"
  PYTHON_VERSION: 39

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build Functions
    runs-on: ubuntu-latest
    environment: PROD
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}"
          service_account: ${{ vars.SERVICE_ACCOUNT_NAME }}

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Ensure GCS bucket exists for function artifacts
        run: |
          chmod +x ./scripts/create_bucket.sh
          ./scripts/create_bucket.sh ${{ vars.GCP_PROJECT_ID }} $CODE_BUCKET $CODE_BUCKET_REGION
        
      - name: Build and Upload Translation Cloud Function
        id: build_function
        uses: ./.github/actions/build-and-upload-function
        with:
          working-directory: ./apps/translation
          code-bucket: ${{ env.CODE_BUCKET }}
          gcp-project-id: ${{ vars.GCP_PROJECT_ID }}
          function-artifact-name: ${{ env.TRANSLATE_FUNCTION_ARCHIVE }}
          python-version: ${{ env.PYTHON_VERSION }}
      
  plan:
    runs-on: ubuntu-latest
    environment: PROD
    needs: build
    env:
      STATE_BUCKET: tf-state-production
      STATE_BUCKET_REGION: "us-central1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}"
          service_account: ${{ vars.SERVICE_ACCOUNT_NAME }}

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Ensure GCS bucket exists for Terraform state
        run: |
          chmod +x ./scripts/create_bucket.sh
          ./scripts/create_bucket.sh ${{ vars.GCP_PROJECT_ID }} $STATE_BUCKET $STATE_BUCKET_REGION 

      - name: Generate backend config
        run: |
          cat > backend.hcl <<EOF
          bucket = "${{ vars.GCP_PROJECT_ID }}-$STATE_BUCKET"
          prefix = "terraform/"
          EOF
        env:
          ENV_NAME: "production"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialize Terraform
        run: terraform init -backend-config=backend.hcl

      - name: Run Terraform Plan
        run: terraform plan -out=tfplan -input=false
        env:
          TF_VAR_cloud_function_translate_archive: ${{ env.TRANSLATE_FUNCTION_ARCHIVE }}
          TF_VAR_project_id: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_gcp_region: ${{ vars.GCP_REGION }}
          TF_VAR_SOURCE_BUCKET_NAME: "in-bucket-${{ vars.GCP_PROJECT_ID }}"
          TF_VAR_TARGET_BUCKET_NAME: "out-bucket-${{ vars.GCP_PROJECT_ID }}"
          TF_VAR_target_language: "${{ vars.TARGET_LANGUAGE }}"
          TF_VAR_code_bucket_name: "${{ vars.GCP_PROJECT_ID }}-${{ env.CODE_BUCKET }}"

      - name: Copy Artifacts
        run: |
          mkdir -p output
          cp backend.hcl output/
          cp tfplan output/

      - name: Upload Terraform Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-config
          path: output/

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment: PROD
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}"
          service_account: ${{ vars.SERVICE_ACCOUNT_NAME }}

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download Terraform Artifacts
        uses: actions/download-artifact@v4
        with:
          name: terraform-config
          path: .

      - name: Initialize Terraform
        run: terraform init -backend-config=backend.hcl

      - name: Run Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan
        env:   
          TF_VAR_target_language: "${{ vars.TARGET_LANGUAGE }}"
          TF_VAR_cloud_function_translate_archive: ${{ env.TRANSLATE_FUNCTION_ARCHIVE }}
          TF_VAR_code_bucket_name: "${{ vars.GCP_PROJECT_ID }}-${{ env.CODE_BUCKET }}"
          TF_VAR_python_version: "${{ env.PYTHON_VERSION }}"