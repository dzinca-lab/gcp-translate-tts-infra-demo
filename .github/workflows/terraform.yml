name: Terraform Deploy via WIF

on:
  workflow_dispatch:
  push:
    branches: [main]
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: PROD
    env:
      STATE_BUCKET: tf-state-production
      STATE_BUCKET_REGION: "us-central1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{ vars.POOL_ID }}/providers/${{ vars.PROVIDER_ID }}"
          service_account: ${{ secrets.SERVICE_ACCOUNT_NAME }}

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Ensure GCS bucket exists for Terraform state
        run: |
         chmod +x ./scripts/create_bucket.sh
         ./scripts/create_bucket.sh ${{ vars.GCP_PROJECT_ID }} $STATE_BUCKET $STATE_BUCKET_REGION 

      - name: Generate backend config
        run: |
         cat > backend.hcl <<EOF
         bucket = "${{ vars.GCP_PROJECT_ID }}-$STATE_BUCKET"
         prefix = "terraform/"
         EOF
        env:
          ENV_NAME: "production"


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3


      - name: Initialize Terraform
        run: terraform init -backend-config=backend.hcl


      - name: Run Terraform Plan
        run: terraform plan -out=tfplan -input=false
        env:
          ENV_NAME: "production"
          TF_VAR_project_id: ${{ vars.GCP_PROJECT_ID }}
          TF_VAR_location: ${{ vars.GCP_REGION }}

      - name: Show Terraform Plan
        run: terraform show -json tfplan | jq -r '.resource_changes[] | select(.change.actions[0] == "create") | .address'
        id: plan
        continue-on-error: true


